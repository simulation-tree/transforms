name: Test

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: transform-systems/tests

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2
        with:
          path: transform-systems

      - name: Pull `unmanaged` dependency
        uses: actions/checkout@v4.1.2
        with:
          repository: game-simulations/unmanaged
          token: ${{ secrets.PAT }}
          path: unmanaged

      - name: Pull `worlds` dependency
        uses: actions/checkout@v4.1.2
        with:
          repository: game-simulations/worlds
          token: ${{ secrets.PAT }}
          path: worlds

      - name: Pull `types` dependency
        uses: actions/checkout@v4.1.2
        with:
          repository: game-simulations/types
          token: ${{ secrets.PAT }}
          path: types
      
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install tools
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Test project
        run: dotnet test -c Debug --collect:"XPlat Code Coverage" --results-directory:"TestResults"

#      - name: Generate HTML report from test results
#        if: always()
#        run: reportgenerator -reports:"TestResults/*/*.xml" -reporttypes:html -targetdir:"TestResults/html"
#        
#      - name: Upload HTML report
#        uses: actions/upload-artifact@v4
#        if: always()
#        with:
#          name: Test Results
#          path: "*/TestResults/html"
#
#      - name: Upload crash dumps
#        uses: actions/upload-artifact@v4
#        if: always()
#        with:
#          name: Crash Dumps
#          if-no-files-found: ignore
#          path: "*/TestResults/*/*.dmp"
#    
#      - name: Upload test sequence
#        uses: actions/upload-artifact@v4
#        if: always()
#        with:
#          name: Test Sequence
#          path: "*/TestResults/*/Sequence_*.xml"
#